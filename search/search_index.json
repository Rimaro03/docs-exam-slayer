{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Exam Slayer - Final course exam project","text":"<p>Full documentation of the project. Check out the source code here</p>"},{"location":"#brief-description","title":"Brief description","text":"<p>Exam Slayer is a 2D graphical adventure game, set in various UniPD classrooms. The goal of the game is to graduate: as in real life, to achieve such goal you need to pass some exams, represented in the game as boss to defeat.</p>"},{"location":"#how-to-play","title":"How to play","text":"<p>The game consists of three levels, which represent three academical years. To complete the game, you need to pass each level by collecting enough CFUs, dropped by each boss you defeat.</p> <p>Finally, during the gameplay, you can collect and use the items you find, for example spending money on the vending machiens to buy upgrades.</p>"},{"location":"#installation-and-execution","title":"Installation and execution","text":"<p>To download the game in <code>.jar</code> format, get the last release from here.</p> <p>If you want to compile the game yourself, make sure you have <code>git</code> installed, the follow these instructions: <pre><code>git clone https://github.com/UNI-projects-team/exam-slayer\ncd exam-slayer\nmvn clean compile assembly:single\njava -jar target/Progetto-edids-1.0.0-jar-with-dependencies.jar\n</code></pre> The compilation process is automated with Maven, which create the <code>.jar</code> file in the <code>target/</code> directory inside the project root.</p>"},{"location":"#technologies-used","title":"Technologies used","text":"Name Version Description Lombok 1.18.32 Java library that writes code like getters automatically Junit 4.13.2 Java framework used for developer-side testing on the JVM Maven 3.9.6 Software that manages the project's build and its dependecies Java Swing 1.4.2 Graphic framework for Java, used to develop the GUI"},{"location":"design_document/","title":"Design document","text":""},{"location":"design_document/#domain-model","title":"Domain model","text":"<pre><code>classDiagram\n    player --&gt; room: moves between\n    player --&gt; item: interact with\n    player --&gt; fixed_item: interact with\n    player --&gt; entity: interact with\n    player --&gt; save_load: use\n    player --&gt; win: views\n    save_load --&gt; game: save/loads\n    game --&gt; win: notifies\n    game --&gt; map: has\n    map --&gt; room: contains\n    map --&gt; entity: contains\n    map --&gt; item: contains\n    map --&gt; fixed_item: contains\n\n    class player {\n        stats\n        inventory\n    }</code></pre>"},{"location":"design_document/#sequence-diagram","title":"Sequence diagram","text":"<pre><code>sequenceDiagram\n  autonumber\n  Alice-&gt;&gt;John: Hello John, how are you?\n  loop Healthcheck\n      John-&gt;&gt;John: Fight against hypochondria\n  end\n  Note right of John: Rational thoughts!\n  John--&gt;&gt;Alice: Great!\n  John-&gt;&gt;Bob: How about you?\n  Bob--&gt;&gt;John: Jolly good!</code></pre>"},{"location":"design_document/#class-diagram","title":"Class diagram","text":"<pre><code>classDiagram\n  Person &lt;|-- Student\n  Person &lt;|-- Professor\n  Person : +String name\n  Person : +String phoneNumber\n  Person : +String emailAddress\n  Person: +purchaseParkingPass()\n  Address \"1\" &lt;-- \"0..1\" Person:lives at\n  class Student{\n    +int studentNumber\n    +int averageMark\n    +isEligibleToEnrol()\n    +getSeminarsTaken()\n  }\n  class Professor{\n    +int salary\n  }\n  class Address{\n    +String street\n    +String city\n    +String state\n    +int postalCode\n    +String country\n    -validate()\n    +outputAsLabel()  \n  }</code></pre>"},{"location":"manuale/","title":"Project manual","text":""},{"location":"system_test/","title":"Sistem Test Document","text":""},{"location":"unit_test/","title":"Unit Test Document","text":""}]}